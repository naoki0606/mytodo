{"version":3,"sources":["createtab.js","tablistcontent.js","tablist.js","Tab.js","lists.js","Content.js","Option.js","App.js","reportWebVitals.js","index.js"],"names":["CreateTab","props","className","onClick","window","confirm","tab_title","prompt","trim","create_tab_title","rename","rename_tab","delete_tab","TabListContent","todo","class","active","id","title","TabList","tablist","todos","map","length","Tab","Lists","active_todo","filter","list","li","type","checked","check","onChange","checkchange","Content","Option","newlist","delete","all_delete","todolist","UniqueId","Date","getTime","toString","Math","random","App","state","bind","addlist","this","list_content","push","setState","pos","indexOf","table","splice","unchecked_list","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0395c183.chunk.js","sourcesContent":["import React from 'react';\n\nfunction CreateTab(props){\n    function create_tab_title(){\n        if(window.confirm('新しいTAB作りますか？')){\n            const tab_title = window.prompt('タイトルを入力してください');\n            if(tab_title!==null && tab_title.trim()){\n                props.create_tab_title(tab_title);\n            }\n        }\n    }\n\n    function rename_tab(){\n        const rename = window.prompt('変更後のリスト名を入力してください');\n        if(rename!==null && rename.trim()){\n            props.rename_tab(rename);\n        }\n    }\n\n    function delete_tab(){\n        \n        if(window.confirm('このタブを削除しますか')){\n            props.delete_tab();\n        }\n    }\n\n    return(\n        <section className='tab_menue'>\n            <button className='createtab' onClick={create_tab_title}>Create</button>\n            <button className='createtab'　onClick={rename_tab}>Rename</button>\n            <button className='createtab' onClick={delete_tab}>Delete</button>\n        </section>\n        )\n    }\n\nexport default CreateTab;","import React from 'react';\n\nfunction TabListContent(props){\n    return(\n                \n        <div className={props.todo.class} onClick={()=>{props.active(props.todo.id)}}>\n            {props.title}\n        </div>\n    )\n\n}\n\n\nexport default TabListContent;","import React from 'react';\nimport TabListContent from './tablistcontent.js'\n\nfunction TabList(props){\n    const tablist = props.todos.map(todo=>{\n        return(\n            <TabListContent\n            active={props.active}\n            todo={todo}\n            key={todo.id}\n            title={todo.title}/>\n        );\n    })\n\n    return(\n        props.todos.length?tablist:<div className='nothing'>\n            TO Create New Tab, Click 'Create' →\n        </div>\n    )\n}\n\nexport default TabList;","import React from 'react';\nimport CreateTab from './createtab.js';\nimport TabList from './tablist.js'\n\nfunction Tab(props){\n    return(\n        <div className='tab'>\n            <div className='tablist'>\n            <TabList\n            active={props.active}\n            todos={props.todos}/>\n            </div>\n            <CreateTab\n             create_tab_title={props.create_tab_title}\n             rename_tab={props.rename_tab}\n             delete_tab={props.delete_tab}/>\n        </div>\n    )\n}\n\n\n\nexport default Tab;","import React from 'react';\nfunction Lists (props){\n\n    const active_todo = props.todos.filter(function(todo){\n        return todo.active;\n    })\n\n\n    if(!active_todo.length>= 1){\n        return(\n            <li>\n                ***Description***\n                <br/>\n                <br/>\n                Create ====> you can create new tab menue\n                <br/> \n                <br/> \n                Rename ====> you can re-name selected tab menue\n                <br/> \n                <br/> \n                Delete ====> you can delete selected tab menue\n                <br/> \n                <br/> \n                New    ====> you can create task list in the tab\n                <br/> \n                <br/> \n                Order  ====> you can rearrange task list as you like\n                <br/> \n                <br/> \n                Delete ====> you can delete the list you can check the box\n                <br/> \n                <br/> \n                All Delete ====> you can delete all list content\n            </li>\n        )\n    } else{\n        const active_list = active_todo[0].list.map(li=>{\n             return(\n              <li key={li.id}><label><input type='checkbox' checked={li.check} onChange={()=>props.checkchange(li)}/>{li.title}</label></li>\n            )\n        })\n        return active_list;\n    }\n\n}\n\n\nexport default Lists;","import React from 'react';\nimport Lists from './lists.js';\n\nfunction Content(props){\n    return(\n        \n        <div className='content'>\n            <ul className='content_ul'>\n                <Lists\n                todos={props.todos}\n                checkchange={props.checkchange}/>\n            </ul>\n        </div>\n    )\n}\n\nexport default Content;","import React from 'react';\n\nfunction Option(props){\n    return(\n        <div className='option'>\n            <div onClick={props.newlist}>New</div>\n            <div>Order</div>\n            <div onClick={props.delete}>Delete</div>\n            <div onClick={props.all_delete}>All Delete</div>\n        </div>\n    )\n}\n\nexport default Option;","import './App.css';\nimport React from 'react';\nimport Tab from './Tab.js'\nimport Content from './Content.js'\nimport Option from './Option.js'\n\nconst todolist=[];\n\n//TODOLISのイメージ\n　// [ \n  //  {title:@@@,　// タブ名\n  //  class       //選択されたタブにselectedクラスを与えdisplay:hidden;を外すことで表示する\n  //  active      //現在selectedクラスがついているかの判定に使う　@return  true|false  selectedクラスあり|無し\n  //  id          // keyとなるユニークID\n  //  list:[　　  //連想配列の形で　タブ内のtodolistを下記の内容で管理する\n  //          (説明)\n  //          title   タブ内のtodo名\n  //          check   チェック判定\n  //          id      一意のid\n\n  //    　　　{title:'',　check:false, 　id:''  },　{title:'',　check:false, id:''  },　{title:'',check:false}\n  // \n  //   　　　]\n  //  　},\n  // \n  //  {title:@@@,\n  //  class  ＠＠＠     \n  //  active  ＠＠＠    \n  //  id      ＠＠＠    \n  //   list:[\n  //    　　　{title:'',check:false  },{title:'',check:false  },{title:'',check:false}\n  //   　　　]\n  //  　},\n  // 　~~~~~~~~~~~~~\n  // ]\n\n\n\n// ユニークなIDの生成\n  function UniqueId(){\n  return new Date().getTime().toString(36)+'-'+Math.random().toString(36);\n}\n\n\nclass App extends React.Component{\n  constructor(){\n    super();\n    this.state={\n      todos:todolist,\n    }\n    this.create_tab_title=this.create_tab_title.bind(this)\n    this.active=this.active.bind(this);\n    this.newlist=this.newlist.bind(this);\n    this.checkchange=this.checkchange.bind(this);\n    this.delete=this.delete.bind(this);\n    this.all_delete=this.all_delete.bind(this);\n    this.rename_tab=this.rename_tab.bind(this);\n    this.delete_tab=this.delete_tab.bind(this);\n  }\n\n  //タブ内に新しいリストを追加 \n  newlist(){\n    const addlist = window.prompt('リスト名を入力してください');\n    if(addlist!==null && addlist.trim()){\n      const todos = this.state.todos.map(todo=>{\n        //現在選択されているタブを特定\n        if(todo.active){\n          //タイトル及びIDを生成して対象タブ内のtodolist連想配列に追加\n          const list_content={title:addlist, check:false, id:UniqueId()}\n          todo.list.push(list_content);\n          return{title:todo.title, class:todo.class, active:todo.active, id:todo.id, list:todo.list}\n        } else{\n          return(todo)\n        }\n      });\n      \n      this.setState({\n        todos:todos\n      })\n    }\n  }\n\n  //選択されたタブをIDで判断しselectedクラス(表示/それ以外はhiddenになる)をつける\n  active(id){\n    const todos = this.state.todos.map(todo=>{\n      return {title:todo.title, class:'none', active:false, id:todo.id, list:todo.list}\n    })\n\n    const pos = this.state.todos.map(todo=>{\n      return todo.id;\n    }).indexOf(id);\n\n    todos[pos].class='selected';\n    todos[pos].active=true;\n    \n\n    this.setState({\n      todos:todos\n    })\n\n  }\n\n  //新しいタブを作成すると同時に選択される \n  create_tab_title(tab_title){\n\n    const todos = this.state.todos.map(todo=>{\n      return {title:todo.title, class:'none', active:false, id:todo.id, list:todo.list}\n    })\n\n    const table={\n      title:'',\n      class:'selected',\n      active:true,\n      id:'',\n      list:[]\n    };\n\n    table.title=tab_title;\n    table.id= UniqueId();\n    todos.push(table);\n    this.setState({\n      todos:todos\n    });\n  }\n\n  // 選択されたタブ名の変更\n  rename_tab(rename){\n    const todos = this.state.todos.map(todo=>{\n      if(todo.active){\n          todo.title = rename;\n          return(todo);\n      } else{\n        return(todo);\n      }\n    });\n    \n    this.setState({\n      todos:todos\n    });\n  }\n\n//選択されたタブの削除 \n  delete_tab(){\n    const todos = this.state.todos.map(todo=>{\n      if(todo.active){\n          todo.id = 'a';\n          return(todo);\n      } else{\n        return(todo);\n      }\n    });\n\n    const pos = this.state.todos.map(todo=>{\n      return todo.id;\n    }).indexOf('a');\n\n    todos.splice(pos,1);\n\n    this.setState({\n      todos:todos\n    });\n\n}\n\n\n\n  // リストのチェックボックスのトグル\n  checkchange(li){\n        const todos = this.state.todos.map(todo=>{\n      //現在selectedクラス(active=true)になっているタブないの処理に入る \n      if(todo.active){\n      // \n          const pos = todo.list.map(list=>{\n            return list.id\n          }).indexOf(li.id);\n          todo.list[pos].check = !todo.list[pos].check;\n        return(todo);\n      } else{\n        return(todo);\n      }\n    });\n\n    this.setState({\n      todos:todos\n    })\n  }\n\n  // テェックされたリストの削除\n  delete(){\n    const todos = this.state.todos.map(todo=>{\n      if(todo.active){\n          const unchecked_list = todo.list.filter(function(list){\n            return list.check === false;\n          })\n          todo.list = unchecked_list;\n          return(todo);\n      } else{\n        return(todo);\n      }\n    });\n\n    this.setState({\n      todo:todos\n    });\n  }\n\n  //　選択中の全リストの削除 \n  all_delete(){\n    if(window.confirm('are you sure?')){\n      const todos = this.state.todos.map(todo=>{\n        if(todo.active){\n            todo.list = [];\n            return(todo);\n        } else{\n          return(todo);\n        }\n      });\n      \n      this.setState({\n        todos:todos\n      });\n\n    }\n\n  }\n\n\n\n  render(){\n    return(\n      <div className='box'>\n          <Tab\n          todos={this.state.todos}\n          active={this.active}\n          create_tab_title={this.create_tab_title}\n          rename_tab={this.rename_tab}\n          delete_tab={this.delete_tab}/>\n          <Content\n          todos={this.state.todos}\n          checkchange={this.checkchange}/>\n          <Option\n          newlist={this.newlist}\n          delete={this.delete}\n          all_delete={this.all_delete}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}